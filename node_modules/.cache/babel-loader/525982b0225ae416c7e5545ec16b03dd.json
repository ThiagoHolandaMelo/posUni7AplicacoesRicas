{"ast":null,"code":"import * as types from './actionTypes';\nimport { reset as resetForm, initialize } from 'redux-form';\nimport axios from 'axios';\nimport { toastr } from 'react-redux-toastr';\nconst URL = \"http://localhost:3004/devs\";\nexport function createDev(dev) {\n  let method = \"put\";\n  dev.id = generateId(dev);\n\n  if (!dev.id) {\n    dev.id = generateId(dev);\n    method = 'post';\n    id = \"\";\n  }\n\n  return dispatch => {\n    axios.post(URL, dev).then(request => {\n      toastr.success('Operacao realizada com sucesso');\n      dispatch(resetForm('devForm'));\n      dispatch({\n        type: types.CREATE_DEV_SUCCESS\n      });\n    });\n  };\n}\nexport function loadDev(dev) {\n  return dispatch => {\n    dispatch(manageDev(false));\n    dispatch(initialize('devForm', dev));\n  };\n}\nexport function loadDevs() {\n  return dispatch => {\n    axios.get(URL).then(devs => {\n      dispatch(loadDevsSuccess(devs.data));\n    });\n  };\n}\nexport function loadDevsSuccess(devs) {\n  return {\n    type: types.LOAD_DEVS_SUCCESS,\n    devs\n  };\n}\nexport function manageDev(redirect) {\n  return {\n    type: types.MANAGE_DEV,\n    redirect\n  };\n}\n\nfunction generateId(dev) {\n  return dev.nome.toLowerCase() + '-' + dev.sobrenome.toLowerCase();\n}","map":{"version":3,"sources":["C:/Thiago/posUni7AplicacoesRicas/src/actions/devActions.js"],"names":["types","reset","resetForm","initialize","axios","toastr","URL","createDev","dev","method","id","generateId","dispatch","post","then","request","success","type","CREATE_DEV_SUCCESS","loadDev","manageDev","loadDevs","get","devs","loadDevsSuccess","data","LOAD_DEVS_SUCCESS","redirect","MANAGE_DEV","nome","toLowerCase","sobrenome"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,eAAvB;AACA,SAAQC,KAAK,IAAIC,SAAjB,EAA4BC,UAA5B,QAA6C,YAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,oBAAvB;AAEA,MAAMC,GAAG,GAAG,4BAAZ;AAEA,OAAO,SAASC,SAAT,CAAmBC,GAAnB,EAAwB;AAC7B,MAAIC,MAAM,GAAG,KAAb;AACAD,EAAAA,GAAG,CAACE,EAAJ,GAASC,UAAU,CAACH,GAAD,CAAnB;;AAEA,MAAI,CAACA,GAAG,CAACE,EAAT,EAAY;AACVF,IAAAA,GAAG,CAACE,EAAJ,GAASC,UAAU,CAACH,GAAD,CAAnB;AACAC,IAAAA,MAAM,GAAG,MAAT;AACAC,IAAAA,EAAE,GAAG,EAAL;AACD;;AAED,SAAOE,QAAQ,IAAI;AACjBR,IAAAA,KAAK,CAACS,IAAN,CAAWP,GAAX,EAAgBE,GAAhB,EACGM,IADH,CACSC,OAAO,IAAI;AACdV,MAAAA,MAAM,CAACW,OAAP,CAAe,gCAAf;AACAJ,MAAAA,QAAQ,CAACV,SAAS,CAAC,SAAD,CAAV,CAAR;AACAU,MAAAA,QAAQ,CAAC;AAACK,QAAAA,IAAI,EAAEjB,KAAK,CAACkB;AAAb,OAAD,CAAR;AACH,KALH;AAMA,GAPF;AAQD;AAED,OAAO,SAASC,OAAT,CAAiBX,GAAjB,EAAsB;AAC3B,SAAOI,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAACQ,SAAS,CAAC,KAAD,CAAV,CAAR;AACAR,IAAAA,QAAQ,CAAET,UAAU,CAAC,SAAD,EAAYK,GAAZ,CAAZ,CAAR;AACD,GAHD;AAID;AAED,OAAO,SAASa,QAAT,GAAoB;AACzB,SAAOT,QAAQ,IAAI;AACjBR,IAAAA,KAAK,CAACkB,GAAN,CAAUhB,GAAV,EACGQ,IADH,CACQS,IAAI,IAAI;AACZX,MAAAA,QAAQ,CAACY,eAAe,CAACD,IAAI,CAACE,IAAN,CAAhB,CAAR;AACD,KAHH;AAID,GALD;AAMD;AAED,OAAO,SAASD,eAAT,CAAyBD,IAAzB,EAA+B;AACpC,SAAO;AAAEN,IAAAA,IAAI,EAAEjB,KAAK,CAAC0B,iBAAd;AAAiCH,IAAAA;AAAjC,GAAP;AACD;AAED,OAAO,SAASH,SAAT,CAAmBO,QAAnB,EAA6B;AAClC,SAAO;AAAEV,IAAAA,IAAI,EAAEjB,KAAK,CAAC4B,UAAd;AAA0BD,IAAAA;AAA1B,GAAP;AACD;;AAED,SAAShB,UAAT,CAAoBH,GAApB,EAAyB;AACvB,SAAOA,GAAG,CAACqB,IAAJ,CAASC,WAAT,KAAyB,GAAzB,GAA+BtB,GAAG,CAACuB,SAAJ,CAAcD,WAAd,EAAtC;AACD","sourcesContent":["import * as types from './actionTypes'\r\nimport {reset as resetForm, initialize} from 'redux-form'\r\nimport axios from 'axios'\r\nimport { toastr } from 'react-redux-toastr'\r\n\r\nconst URL = \"http://localhost:3004/devs\"\r\n\r\nexport function createDev(dev) {\r\n  let method = \"put\"\r\n  dev.id = generateId(dev)\r\n\r\n  if( !dev.id){\r\n    dev.id = generateId(dev)\r\n    method = 'post'\r\n    id = \"\"\r\n  }\r\n\r\n  return dispatch => {\r\n    axios.post(URL, dev)\r\n      .then( request => {\r\n          toastr.success('Operacao realizada com sucesso')\r\n          dispatch(resetForm('devForm'))\r\n          dispatch({type: types.CREATE_DEV_SUCCESS})\r\n      })\r\n   }\r\n}\r\n\r\nexport function loadDev(dev) {\r\n  return dispatch => {\r\n    dispatch(manageDev(false))\r\n    dispatch( initialize('devForm', dev))\r\n  }\r\n}\r\n\r\nexport function loadDevs() {\r\n  return dispatch => {\r\n    axios.get(URL)\r\n      .then(devs => {\r\n        dispatch(loadDevsSuccess(devs.data))\r\n      })\r\n  }\r\n}\r\n\r\nexport function loadDevsSuccess(devs) {\r\n  return { type: types.LOAD_DEVS_SUCCESS, devs };\r\n}\r\n\r\nexport function manageDev(redirect) {\r\n  return { type: types.MANAGE_DEV, redirect }\r\n}\r\n\r\nfunction generateId(dev) { \r\n  return dev.nome.toLowerCase() + '-' + dev.sobrenome.toLowerCase()\r\n}"]},"metadata":{},"sourceType":"module"}